swagger: '2.0'
info:
  version: '1.0.0'
  title: Swagger MedicalConditions (Simple)
  contact:
    name: Swagger API team
    url: http://swagger.io
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /condition:
    get:
      description: Returns a list of medical conditions
      operationId: getConditions
      produces:
        - application/json
        - text/html
      parameters:
        - name: symptoms
          in: query
          description: symptoms to filter by
          required: false
          type: array
          items:
            type: string
        - name: type
          in: query
          description: type of condition to filter by
          required: false
          type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: conditions response
          schema:
            type: array
            items:
              $ref: '#/definitions/condition'
        '404':
          description: conditions not found
        '401':
          description: user not logged in
        default:
          description: unexpected error
  /conditions/{name}:
    get:
      description: Returns information about a certain medical condition
      operationId: getConditionByName
      produces:
        - application/json
        - text/html
      parameters:
        - name: name
          in: path
          description: name of the medical condition
          required: true
          type: string
      responses:
        '200':
          description: condition response
          schema:
            $ref: '#/definitions/condition'
        '404':
          description: conditions not found
        '401':
          description: user not logged in
        default:
          description: unexpected error
  /symptom:
    get:
      description: Returns a list of symptoms
      operationId: getSymptoms
      produces:
        - application/json
        - text/html
      parameters:
        - name: disease
          in: query
          description: symptoms of a certain disease
          required: false
          type: array
          items:
            type: string
      responses:
        '200':
          description: symptoms response
          schema:
            type: array
            items:
              $ref: '#/definitions/symptom'
        '404':
          description: symptoms not found
        '401':
          description: user not logged in
        default:
          description: unexpected error
  /symptom/{name}:
    get:
      description: Returns information about a certain symptom
      operationId: getSymptomByName
      produces:
        - application/json
        - text/html
      parameters:
        - name: name
          in: path
          description: name of the symptom
          required: true
          type: string
      responses:
        '200':
          description: symptom response
          schema:
            $ref: '#/definitions/symptom'
        '404':
          description: conditions not found
        '401':
          description: user not logged in
        default:
          description: unexpected error
definitions:
  condition:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      symptoms:
        type: string
      drugs:
        type: string
  symptom:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      conditions:
        type: string